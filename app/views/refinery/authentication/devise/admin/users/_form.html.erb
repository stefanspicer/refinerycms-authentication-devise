<h2 class="admin-title hide-in-modal"><%= @user.id.present? ? "#{@user.username}'s Profile" : 'Add A New Admin' %></h2>

<%
  html_options = {
    :class => 'ajax-form admin-form',
    :'data-ajax-replace-selector' => '.admin-form',
    :'data-item-id' => @user.id
  }
%>
<%= form_for [refinery, :authentication, :devise, :admin, @user], html: html_options do |f| %>

  <%= render '/refinery/admin/error_messages',
             :object => @user,
             :include_object_name => true %>

  <%= render 'customize_form', :f => f %>
  <%= render partial: 'refinery/extension_hooks', locals: {scope: :user_form, :f => f} %>

  <div class="placeholder-labels">
    <div class='form-group'>
      <div class="validation">
        <span></span>
      </div>
      <%= f.text_field :username, :placeholder => 'Username', :class => 'form-control form-control-lg','data-validate'=>'required_w_name', 'data-val-field' => 'username', :placeholder => @user.class.human_attribute_name('username')  %>
      <%= f.label :username, "Username for login" %>
    </div>

  <%= yield :after_username %>

    <div class='form-group'>
      <div class="validation">
        <span></span>
      </div>
      <%= f.text_field :email, :class => 'form-control form-control-lg', :placeholder => 'Email','data-validate'=>'email,required_w_name', 'data-val-field' => 'email', :placeholder => @user.class.human_attribute_name('email')  %>
      <%= f.label :email %>
    </div>
  </div>
  <% if @edit_user.present? %>
    <% if @user.persisted? %>
      <small class="mb-3"><%= content_tag(:span, t('.blank_password_keeps_current')) %></small>
    <% end %>

    <div class="placeholder-labels">
      <div class='form-group'>
        <%= f.password_field :password, :autocomplete => 'off', :class => 'form-control form-control-lg', :placeholder => @user.class.human_attribute_name('password') %>
        <%= f.label :password %>
      </div>

      <div class='form-group'>
        <%= f.password_field :password_confirmation, :autocomplete => 'off', :class => 'form-control form-control-lg', :placeholder => @user.class.human_attribute_name('password_confirmation') %>
        <%= f.label :password_confirmation %>
      </div>
    </div>
  <% end %>

  <%= yield :before_plugin_access %>

  <div class="card collapse in mb-0" id="admin-advanced">
    <div class="card-block">
      <%= yield :advanced_settings %>

      <div class='form-group plugin_access'>
        <span class='label_with_help'>
          <%= f.label :plugin_access, t('.plugin_access'), :class => "title_label" %>
          <%= link_to "(#{t('.enable_all')})", "", :id => "user_plugins_enable_all" %>
        </span>
        <ul id='plugins' class='list-unstyled checkboxes'>
          <% @available_plugins.each do |plugin| -%>
            <% if Refinery::Plugins.always_allowed.names.include?(plugin[:name]) or
                  (plugin[:name] == 'refinery_authentication_devise' && @user.id == current_refinery_user.id) %>
              <li class="hidden-xs-up">
                <%= hidden_field_tag 'user[plugins][]', plugin[:name], :id => "plugins_#{plugin[:name]}" %>
              </li>
            <% else %>
              <li>
                <%= check_box_tag 'user[plugins][]', plugin[:name],
                                  @selected_plugin_names.include?(plugin[:name]),
                                  :id => "plugins_#{plugin[:name]}" %>
                <%= f.label 'user[plugins][]',
                            t('title', :scope => "refinery.plugins.#{plugin[:name].downcase}", :default => plugin[:title]),
                            :class => "stripped",
                            :for => "plugins_#{plugin[:name]}" %>
              </li>
            <% end %>
          <% end %>
        </ul>
      </div>

      <% if current_refinery_user.has_role?(:superuser) && Refinery::Authentication::Devise.superuser_can_assign_roles %>
        <div class='form-group role_access mb-0'>
          <span class='label_with_help'>
            <%= f.label :role_access, t('.role_access'), :class => "title_label" %>
          </span>
          <ul id='roles' class='list-unstyled checkboxes mb-0'>
            <% @available_roles.each do |role|
              downcased_title = (title = role[:title]).downcase -%>
              <li>
                <%= check_box_tag 'user[roles][]', downcased_title, @user.has_role?(title),
                                  :id => "roles_#{downcased_title}" %>
                <%= f.label 'user[roles][]',
                            t(downcased_title, :scope => 'refinery.authentication.devise.roles', :default => title),
                            :class => 'stripped',
                            :for => "roles_#{downcased_title}" %>
              </li>
            <% end %>
          </ul>
        </div>
      <% end %>
    </div>
  </div>

  <%= render '/refinery/admin/form_actions', :f => f,
             :continue_editing => false,
             :submit_button_text => @submit_button_text ||= 'Send Invitation',
             :hide_delete => !current_refinery_user.can_delete?(@user),
             :delete_title => t('delete', :scope => 'refinery.authentication.devise.admin.users'),
             :delete_confirmation => t('message', :scope => 'refinery.authentication.devise.admin.delete', :title => @user.username) %>
<% end %>

<% content_for :javascripts do %>
  <script>
    $(document).ready(function() {
      $('#user_plugins_enable_all').click(function(e, a) {
        $('div.plugin_access ul#plugins li input:checkbox').prop('checked', true);
        e.preventDefault();
      });
    });
  </script>
<% end %>
